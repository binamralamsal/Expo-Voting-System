import Head from "next/head";
import { Inter } from "next/font/google";

import { useRouter } from "next/router";
import {
  Button,
  Container,
  Paper,
  Select,
  Text,
  TextInput,
  Title,
} from "@mantine/core";
import { useForm, zodResolver } from "@mantine/form";
import { VoteProjectCredentialsDTO, voteProjectSchema } from "@/validators";
import { axios } from "@/lib/axios";
import { useQuery } from "@tanstack/react-query";
import { IProject } from "@/models/project";
import { useEffect } from "react";
import { showNotification } from "@mantine/notifications";
import { IconCheck } from "@tabler/icons-react";

function Home() {
  const router = useRouter();

  const form = useForm<VoteProjectCredentialsDTO>({
    validate: zodResolver(voteProjectSchema),
    validateInputOnBlur: true,
    initialValues: {
      token: "",
      projectId: "",
    },
  });

  useEffect(() => {
    if (!router.isReady) return;

    if (router.query.id)
      form.setFieldValue("projectId", router.query.id as string);
  }, []);

  const { data: projectsData } = useQuery(["projects"], getProjects);

  const handleVoteProject = async (data: VoteProjectCredentialsDTO) => {
    await axios.post("/api/vote-project", data);

    showNotification({
      icon: <IconCheck size={16} />,
      color: "teal",
      title: "Voted!!!",
      message: `Thank you! We have counted your vote for ${
        projectsData?.projects.find((p) => p._id === data.projectId)?.name
      }`,
    });
  };

  const projects = (projectsData?.projects || []).map((project) => ({
    value: project._id,
    label: project.name,
  }));

  return (
    <>
      <Head>
        <title>Xavier Science and Business Expo 2023</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container size={420} my={40}>
          <Title
            align="center"
            sx={(theme) => ({
              fontFamily: `Greycliff CF, ${theme.fontFamily}`,
              fontWeight: 900,
            })}
          >
            Xavier Science and Business Expo 2023
          </Title>
          <Text color="dimmed" size="md" align="center" mt={5} weight="bold">
            Vote from the given projects
          </Text>

          <Paper withBorder shadow="md" p={30} mt={30} radius="md">
            <form onSubmit={form.onSubmit(handleVoteProject)}>
              <TextInput
                label="Token"
                withAsterisk
                {...form.getInputProps("token")}
                error={form.errors.token}
                size="lg"
              />

              <Select
                mt="md"
                searchable
                label="Project"
                size="lg"
                placeholder="Pick one"
                error={form.errors.projectId}
                {...form.getInputProps("projectId")}
                data={projects}
                withAsterisk
                description="If you have already voted a project, then it will replace your previous project"
              />

              <Button fullWidth mt="xl" size="lg" type="submit">
                Vote Project
              </Button>
            </form>
          </Paper>
        </Container>
      </main>
    </>
  );
}
const getProjects = (): Promise<{
  status: "OK" | "ERROR";
  message: string;
  projects: IProject[];
}> => {
  return axios.get("/api/project");
};

export default Home;
